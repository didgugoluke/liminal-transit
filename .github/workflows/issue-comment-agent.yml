name: 💬 AI Agent - Issue Comment Monitor

on:
  issues:
    types: [opened, closed, labeled, unlabeled]
  pull_request:
    types: [opened, closed]
  push:
    branches: [main]
  workflow_run:
    workflows: ["🔍 AI Agent - Find Replace Engine", "🤖 AI Agent - Orchestrator"]
    types: [completed]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  issue-monitor:
    runs-on: ubuntu-latest
    
    steps:
      - name: 🤖 Issue Comment Agent Initialization
        uses: actions/checkout@v4

      - name: 📊 Analyze Repository Activity
        id: analyze_activity
        run: |
          # Get current repository stats
          TOTAL_FILES=$(find . -type f -not -path '*/.*' | wc -l | tr -d ' ')
          TOTAL_LINES=$(find . -name '*.md' -o -name '*.ts' -o -name '*.js' -o -name '*.json' | xargs wc -l 2>/dev/null | tail -1 | awk '{print $1}' || echo "0")
          
          # Get recent activity
          RECENT_COMMITS=$(git log --oneline -5 | wc -l | tr -d ' ')
          LAST_COMMIT=$(git log -1 --pretty=format:"%h %s" || echo "No commits")
          
          echo "total_files=$TOTAL_FILES" >> $GITHUB_OUTPUT
          echo "total_lines=$TOTAL_LINES" >> $GITHUB_OUTPUT
          echo "recent_commits=$RECENT_COMMITS" >> $GITHUB_OUTPUT
          echo "last_commit=$LAST_COMMIT" >> $GITHUB_OUTPUT

      - name: 🎯 Monitor Issue Activity
        if: github.event_name == 'issues'
        run: |
          ISSUE_NUMBER="${{ github.event.issue.number }}"
          ISSUE_ACTION="${{ github.event.action }}"
          ISSUE_TITLE="${{ github.event.issue.title }}"
          
          case "$ISSUE_ACTION" in
            "opened")
              COMMENT="🤖 **AI Issue Monitor Activated**
              
              **Issue**: #$ISSUE_NUMBER - $ISSUE_TITLE
              **Status**: Newly opened and under AI agent analysis
              **Labels**: ${{ join(github.event.issue.labels.*.name, ', ') }}
              
              **Repository Status**:
              - **Files**: ${{ steps.analyze_activity.outputs.total_files }}
              - **Lines**: ${{ steps.analyze_activity.outputs.total_lines }}
              - **Recent Activity**: ${{ steps.analyze_activity.outputs.recent_commits }} commits
              
              **AI Agent Detection**:
              - Scanning for applicable AI agents
              - Checking workflow triggers
              - Preparing autonomous execution plan
              
              **Next**: AI agents will activate based on issue labels and content"
              ;;
            "labeled")
              COMMENT="🏷️ **Issue Label Update Detected**
              
              **Issue**: #$ISSUE_NUMBER
              **New Labels**: ${{ join(github.event.issue.labels.*.name, ', ') }}
              **Action**: Re-evaluating AI agent assignments
              
              **Agent Triggers**:
              - find-replace, branding, refactor → Find/Replace Agent
              - epic, P0, ai-native → Epic Orchestrator
              - chore, P1, ai-agent → Task Agent
              
              **Status**: Checking for workflow activation..."
              ;;
            "closed")
              COMMENT="✅ **Issue Closed - AI Monitor Update**
              
              **Issue**: #$ISSUE_NUMBER - $ISSUE_TITLE
              **Status**: Resolution complete
              **Final State**: ${{ github.event.issue.state }}
              
              **Repository Impact**:
              - **Current Files**: ${{ steps.analyze_activity.outputs.total_files }}
              - **Total Lines**: ${{ steps.analyze_activity.outputs.total_lines }}
              - **Latest**: ${{ steps.analyze_activity.outputs.last_commit }}
              
              **AI Agent Summary**: Task completion recorded"
              ;;
          esac
          
          if [ -n "$COMMENT" ]; then
            gh issue comment $ISSUE_NUMBER --body "$COMMENT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄 Monitor Pull Request Activity
        if: github.event_name == 'pull_request'
        run: |
          PR_NUMBER="${{ github.event.pull_request.number }}"
          PR_ACTION="${{ github.event.action }}"
          PR_TITLE="${{ github.event.pull_request.title }}"
          
          # Find related issue from PR body or title
          RELATED_ISSUE=$(echo "$PR_TITLE" | grep -o "#[0-9]\+" | head -1 | tr -d '#' || echo "")
          
          if [ -n "$RELATED_ISSUE" ]; then
            case "$PR_ACTION" in
              "opened")
                COMMENT="🔄 **AI Agent PR Created**
                
                **Pull Request**: #$PR_NUMBER - $PR_TITLE
                **Related Issue**: #$RELATED_ISSUE
                **Status**: AI agent execution complete, ready for review
                
                **PR Details**:
                - **Branch**: ${{ github.event.pull_request.head.ref }}
                - **Commits**: ${{ github.event.pull_request.commits }}
                - **Files Changed**: ${{ github.event.pull_request.changed_files }}
                
                **Next**: Code review and validation"
                ;;
              "closed")
                if [ "${{ github.event.pull_request.merged }}" == "true" ]; then
                  COMMENT="🎉 **AI Agent PR Merged Successfully**
                  
                  **Pull Request**: #$PR_NUMBER
                  **Related Issue**: #$RELATED_ISSUE
                  **Status**: Changes merged to main branch
                  
                  **Impact**:
                  - **Repository Updated**: ${{ steps.analyze_activity.outputs.total_files }} files
                  - **Integration**: ${{ steps.analyze_activity.outputs.total_lines }} total lines
                  - **Latest Commit**: ${{ steps.analyze_activity.outputs.last_commit }}
                  
                  **AI Agent**: Task execution cycle complete ✅"
                else
                  COMMENT="❌ **AI Agent PR Closed**
                  
                  **Pull Request**: #$PR_NUMBER
                  **Related Issue**: #$RELATED_ISSUE
                  **Status**: PR closed without merge
                  **Action**: AI agent may retry or require manual intervention"
                fi
                ;;
            esac
            
            if [ -n "$COMMENT" ]; then
              gh issue comment $RELATED_ISSUE --body "$COMMENT"
            fi
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📈 Monitor Workflow Completion
        if: github.event_name == 'workflow_run'
        run: |
          WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          WORKFLOW_STATUS="${{ github.event.workflow_run.conclusion }}"
          WORKFLOW_URL="${{ github.event.workflow_run.html_url }}"
          
          # Find related issues based on recent activity
          RECENT_ISSUES=$(gh issue list --state open --limit 5 --json number,title | jq -r '.[] | "#\(.number)"' | tr '\n' ' ')
          
          STATUS_COMMENT="🤖 **AI Agent Workflow Update**
          
          **Workflow**: $WORKFLOW_NAME
          **Status**: $WORKFLOW_STATUS
          **URL**: $WORKFLOW_URL
          
          **Repository Status**:
          - **Files**: ${{ steps.analyze_activity.outputs.total_files }}
          - **Lines**: ${{ steps.analyze_activity.outputs.total_lines }}
          - **Activity**: ${{ steps.analyze_activity.outputs.recent_commits }} recent commits
          
          **Active Issues**: $RECENT_ISSUES
          **AI Agent Network**: $WORKFLOW_STATUS workflow execution"
          
          # Comment on the most recent open issue
          LATEST_ISSUE=$(gh issue list --state open --limit 1 --json number | jq -r '.[0].number' 2>/dev/null || echo "")
          
          if [ -n "$LATEST_ISSUE" ]; then
            gh issue comment $LATEST_ISSUE --body "$STATUS_COMMENT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 🚀 Monitor Main Branch Updates
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          COMMIT_SHA="${{ github.sha }}"
          COMMIT_MESSAGE="${{ github.event.head_commit.message }}"
          
          # Find any open issues that might be related
          OPEN_ISSUES=$(gh issue list --state open --limit 3 --json number,title)
          
          PUSH_COMMENT="📝 **Main Branch Update Detected**
          
          **Commit**: $COMMIT_SHA
          **Message**: $COMMIT_MESSAGE
          **Pusher**: ${{ github.event.pusher.name }}
          
          **Repository State**:
          - **Total Files**: ${{ steps.analyze_activity.outputs.total_files }}
          - **Total Lines**: ${{ steps.analyze_activity.outputs.total_lines }}
          - **Latest**: ${{ steps.analyze_activity.outputs.last_commit }}
          
          **AI Agent Impact**: Repository state updated, agents may respond to changes"
          
          # Comment on the most recent issue
          LATEST_ISSUE=$(echo "$OPEN_ISSUES" | jq -r '.[0].number' 2>/dev/null || echo "")
          
          if [ -n "$LATEST_ISSUE" ]; then
            gh issue comment $LATEST_ISSUE --body "$PUSH_COMMENT"
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Generate Activity Summary
        if: always()
        run: |
          echo "🤖 AI Issue Comment Agent execution complete"
          echo "Repository monitoring active and responsive"
          echo "Event: ${{ github.event_name }}"
          echo "Status: Monitoring successful"
