name: üìã Epic Breakdown Agent - Simple Test

on:
  issue_comment:
    types: [created]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  epic-breakdown-simple:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.comment.body, 'Epic breakdown simple test') && contains(github.event.issue.labels.*.name, 'epic')

    steps:
      - name: üèóÔ∏è Checkout Repository
        uses: actions/checkout@v4

      - name: üß™ Simple Epic Test
        run: |
          echo "Simple Epic Breakdown Test starting..."
          EPIC_NUMBER="${{ github.event.issue.number }}"
          EPIC_TITLE="${{ github.event.issue.title }}"

          echo "Epic Number: $EPIC_NUMBER"
          echo "Epic Title: $EPIC_TITLE"

          # Test basic gh command
          gh issue view $EPIC_NUMBER --json title --jq '.title'

          # Simple story creation test
          STORY_1=$(gh issue create \
            --title "Test Story 1 for Epic $EPIC_NUMBER" \
            --body "This is a test story created by the simplified Epic Breakdown Agent." \
            --label "epic-story,test")

          STORY_1_ID=$(echo $STORY_1 | grep -o '[0-9]*$')
          echo "Created test story: #$STORY_1_ID"

          # Add to Noveli project (project 2) using PROJECT_TOKEN
          echo "Adding story #$STORY_1_ID to Noveli project..."
          GH_TOKEN="${{ secrets.PROJECT_TOKEN }}" gh project item-add PVT_kwHOCf5VHc4BB2AJ --url "https://github.com/didgugoluke/liminal-transit/issues/$STORY_1_ID" || echo "Project integration failed - check PROJECT_TOKEN permissions"

          # Comment success
          gh issue comment ${{ github.event.issue.number }} --body "‚úÖ **Simple Epic Breakdown Test Complete**

          Created test story: #$STORY_1_ID for **Noveli** project
          Epic breakdown functionality is working correctly.

          **Next Steps:** 
          - Validate Noveli project integration 
          - Run full Epic Breakdown Agent for complete AI-generated story/task network"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
