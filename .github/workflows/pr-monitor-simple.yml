name: 🔍 PR Monitor Agent - Simple

on:
  workflow_dispatch:
    inputs:
      pr_number:
        description: "PR number to monitor"
        required: true
        type: string

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  pr-monitor:
    name: 🔍 PR Monitor Execution
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚡ Setup Rate Limiting
        run: |
          echo "Setting up PR Monitor environment with rate limiting..."
          chmod +x scripts/github-rate-limit-manager.sh

          if ! scripts/github-rate-limit-manager.sh check; then
            echo "❌ Rate limits too low for PR Monitor operations"
            scripts/github-rate-limit-manager.sh emergency "PR Monitor"
            exit 1
          fi

          echo "✅ Rate limits OK - proceeding with monitoring"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ⚙️ Configure GitHub CLI
        run: |
          if ! gh auth status; then
            echo "❌ GitHub CLI authentication failed"
            exit 1
          fi
          echo "✅ GitHub CLI configured successfully"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Check PR Status
        id: check_pr
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER="${{ github.event.inputs.pr_number }}"

          if [ -z "$PR_NUMBER" ] || [ "$PR_NUMBER" = "null" ]; then
            echo "❌ No PR number provided"
            exit 1
          fi

          echo "🔍 Checking PR #$PR_NUMBER..."

          # Get basic PR info
          PR_TITLE=$(gh pr view "$PR_NUMBER" --json title --jq '.title')
          IS_DRAFT=$(gh pr view "$PR_NUMBER" --json isDraft --jq '.isDraft')
          AUTHOR=$(gh pr view "$PR_NUMBER" --json author --jq '.author.login')

          echo "📋 PR: #$PR_NUMBER - $PR_TITLE"
          echo "👤 Author: $AUTHOR" 
          echo "📝 Draft: $IS_DRAFT"

          # Set environment variables
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo "PR_TITLE=$PR_TITLE" >> $GITHUB_ENV
          echo "IS_DRAFT=$IS_DRAFT" >> $GITHUB_ENV
          echo "AUTHOR=$AUTHOR" >> $GITHUB_ENV

      - name: 🎯 Process Draft PR
        if: env.IS_DRAFT == 'true'
        env:
          GH_TOKEN: ${{ secrets.PROJECT_TOKEN }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
        run: |
          echo "🔍 Processing draft PR #$PR_NUMBER..."
          
          # Simple readiness check
          if echo "${{ env.AUTHOR }}" | grep -iq "copilot"; then
            echo "🤖 Copilot PR detected - marking as ready"
            gh pr ready "$PR_NUMBER"
            gh pr comment "$PR_NUMBER" --body "🤖 PR Monitor Agent - Auto-promoted to ready for review"
          else
            echo "👤 Human PR - leaving as draft"
          fi

      - name: 🚨 Emergency Cleanup
        if: failure()
        run: |
          echo "🚨 PR Monitor failed - performing cleanup..."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ✅ Monitor Completion
        run: |
          echo "🔍 PR Monitor Agent completed successfully"
          echo "📊 Processed PR: #${{ env.PR_NUMBER }}"
