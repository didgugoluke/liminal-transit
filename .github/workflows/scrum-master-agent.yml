name: 🏃‍♂️ Scrum Master Agent - Story Lifecycle Management

on:
  issue_comment:
    types: [created]
  workflow_dispatch:
    inputs:
      story_number:
        description: "Story issue number to manage"
        required: true
        type: string
      action:
        description: "Action to perform"
        required: true
        type: choice
        options:
          - "start_story"
          - "check_progress"
          - "handoff_to_dev"
        default: "start_story"

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  scrum-master:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'workflow_dispatch') ||
      (contains(github.event.comment.body, 'scrum master agent') && 
       (contains(github.event.issue.labels.*.name, 'epic-story') || 
        contains(github.event.issue.labels.*.name, 'epic-task') ||
        contains(github.event.issue.labels.*.name, 'ai-agent')))

    steps:
      - name: 🤖 Scrum Master Agent Initialization
        uses: actions/checkout@v4

      - name: 🔧 Configure Environment
        run: |
          echo "🏃‍♂️ Scrum Master Agent Starting..."
          echo "Repository: ${{ github.repository }}"
          echo "Trigger: ${{ github.event_name }}"

          # Set story number and action based on trigger
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            STORY_NUMBER="${{ github.event.inputs.story_number }}"
            ACTION="${{ github.event.inputs.action }}"
          else
            # Extract story number from issue or comment context
            if [ "${{ github.event.issue.number }}" ]; then
              STORY_NUMBER="${{ github.event.issue.number }}"
            else
              STORY_NUMBER="54"  # Default to our test story
            fi
            ACTION="start_story"
          fi

          echo "STORY_NUMBER=$STORY_NUMBER" >> $GITHUB_ENV
          echo "ACTION=$ACTION" >> $GITHUB_ENV
          echo "PROJECT_ID=2" >> $GITHUB_ENV

          echo "Managing Story: #$STORY_NUMBER"
          echo "Action: $ACTION"

      - name: 📊 Analyze Story State
        id: analyze
        run: |
          STORY_NUMBER="${{ env.STORY_NUMBER }}"
          PROJECT_ID="${{ env.PROJECT_ID }}"

          echo "🔍 Analyzing Story #$STORY_NUMBER current state..."

          # Get story details
          STORY_DATA=$(gh issue view "$STORY_NUMBER" --json title,labels,state,body)
          STORY_TITLE=$(echo "$STORY_DATA" | jq -r '.title')
          STORY_STATE=$(echo "$STORY_DATA" | jq -r '.state')

          echo "story_title=$STORY_TITLE" >> $GITHUB_OUTPUT
          echo "story_state=$STORY_STATE" >> $GITHUB_OUTPUT

          # Get current project status
          PROJECT_ITEMS=$(gh project item-list "$PROJECT_ID" --owner "@me" --format json)
          CURRENT_STATUS=$(echo "$PROJECT_ITEMS" | jq -r --arg title "$STORY_TITLE" '.items[] | select(.content.title == $title) | .status // "No Status"')

          echo "current_status=$CURRENT_STATUS" >> $GITHUB_OUTPUT

          # Check if story has associated tasks
          TASKS=$(gh issue list --search "Epic.*$(echo "$STORY_TITLE" | grep -o 'Story [0-9]*')" --json number,title --label epic-task)
          TASK_COUNT=$(echo "$TASKS" | jq length)
          TASK_NUMBERS=$(echo "$TASKS" | jq -r '.[].number' | tr '\n' ',' | sed 's/,$//')

          echo "task_count=$TASK_COUNT" >> $GITHUB_OUTPUT
          echo "task_numbers=$TASK_NUMBERS" >> $GITHUB_OUTPUT

          echo "📈 Story Analysis Complete:"
          echo "  Title: $STORY_TITLE"
          echo "  State: $STORY_STATE"
          echo "  Project Status: $CURRENT_STATUS"
          echo "  Associated Tasks: $TASK_COUNT ($TASK_NUMBERS)"
        env:
          GH_TOKEN: ${{ secrets.PROJECT_TOKEN }}

      - name: 🚀 Execute Scrum Master Action
        id: execute
        run: |
          ACTION="${{ env.ACTION }}"
          STORY_NUMBER="${{ env.STORY_NUMBER }}"
          PROJECT_ID="${{ env.PROJECT_ID }}"
          CURRENT_STATUS="${{ steps.analyze.outputs.current_status }}"
          STORY_TITLE="${{ steps.analyze.outputs.story_title }}"
          TASK_COUNT="${{ steps.analyze.outputs.task_count }}"

          echo "🎯 Executing Action: $ACTION"
          echo "Current Status: $CURRENT_STATUS"

          case "$ACTION" in
            "start_story")
              echo "🏁 Starting Story Lifecycle Management..."
              
              # Move from No Status to To Do
              if [ "$CURRENT_STATUS" = "No Status" ] || [ "$CURRENT_STATUS" = "null" ]; then
                echo "📋 Moving story to To Do status..."
                
                # Update project status to To Do
                gh project item-edit --project-id "$PROJECT_ID" --id $(gh project item-list "$PROJECT_ID" --owner "@me" --format json | jq -r --arg title "$STORY_TITLE" '.items[] | select(.content.title == $title) | .id') --field-id "Status" --text "To Do" || echo "Status update may have failed"
                
                # Add story management comment
                gh issue comment "$STORY_NUMBER" --body "🏃‍♂️ Scrum Master Agent - Story Activated. Moved to To Do status. $TASK_COUNT tasks identified. Ready for Development Agent handoff."
                
                echo "action_result=moved_to_todo" >> $GITHUB_OUTPUT
                echo "next_action=handoff_to_dev" >> $GITHUB_OUTPUT
                
              else
                echo "⚠️  Story is already in progress (Status: $CURRENT_STATUS)"
                echo "action_result=already_in_progress" >> $GITHUB_OUTPUT
                echo "next_action=check_progress" >> $GITHUB_OUTPUT
              fi
              ;;
              
            "handoff_to_dev")
              echo "🔄 Handing off to Development Agent..."
              
              # Trigger Development Agent workflow
              gh workflow run development-agent.yml \
                --field story_number="$STORY_NUMBER" \
                --field action="take_story" || echo "Development Agent workflow trigger may have failed"
              
              gh issue comment "$STORY_NUMBER" --body "🔄 Handoff to Development Agent. Story #$STORY_NUMBER transitioning from To Do to In Progress."
              
              echo "action_result=handed_off" >> $GITHUB_OUTPUT
              ;;
              
            "check_progress")
              echo "📊 Checking story progress..."
              
              # Get updated status
              PROJECT_ITEMS=$(gh project item-list "$PROJECT_ID" --owner "@me" --format json)
              UPDATED_STATUS=$(echo "$PROJECT_ITEMS" | jq -r --arg title "$STORY_TITLE" '.items[] | select(.content.title == $title) | .status // "No Status"')
              
              gh issue comment "$STORY_NUMBER" --body "📊 Scrum Master Progress Check. Story #$STORY_NUMBER status: $UPDATED_STATUS. $TASK_COUNT tasks. Timestamp: $(date)"
              
              echo "action_result=progress_checked" >> $GITHUB_OUTPUT
              echo "updated_status=$UPDATED_STATUS" >> $GITHUB_OUTPUT
              ;;
          esac
        env:
          GH_TOKEN: ${{ secrets.PROJECT_TOKEN }}

      - name: 🎯 Schedule Next Actions
        if: steps.execute.outputs.next_action
        run: |
          NEXT_ACTION="${{ steps.execute.outputs.next_action }}"
          STORY_NUMBER="${{ env.STORY_NUMBER }}"

          echo "⏰ Scheduling next action: $NEXT_ACTION"

          if [ "$NEXT_ACTION" = "handoff_to_dev" ]; then
            echo "🚀 Triggering Development Agent in 30 seconds..."
            sleep 30
            
            # Trigger Development Agent workflow
            gh workflow run development-agent.yml \
              --field story_number="$STORY_NUMBER" \
              --field action="take_story" || echo "Development Agent workflow may need manual trigger"
          fi
        env:
          GH_TOKEN: ${{ secrets.PROJECT_TOKEN }}

      - name: 📋 Generate Scrum Report
        run: |
          STORY_NUMBER="${{ env.STORY_NUMBER }}"
          ACTION="${{ env.ACTION }}"
          ACTION_RESULT="${{ steps.execute.outputs.action_result }}"
          STORY_TITLE="${{ steps.analyze.outputs.story_title }}"
          CURRENT_STATUS="${{ steps.analyze.outputs.current_status }}"
          TASK_COUNT="${{ steps.analyze.outputs.task_count }}"

          echo "📋 Scrum Master Agent Report"
          echo "════════════════════════════════════════"
          echo "🕐 Timestamp: $(date)"
          echo "🎯 Story: #$STORY_NUMBER - $STORY_TITLE"
          echo "🔧 Action Executed: $ACTION"
          echo "📊 Result: $ACTION_RESULT"
          echo "📈 Current Status: $CURRENT_STATUS"
          echo "📋 Associated Tasks: $TASK_COUNT"
          echo ""
          echo "🤖 Scrum Master Agent Status: ✅ OPERATIONAL"
          echo "🚀 Story Lifecycle: MANAGED"

      - name: 💬 Update Test Case Issue
        if: env.STORY_NUMBER == '54'
        run: |
          ACTION_RESULT="${{ steps.execute.outputs.action_result }}"

          gh issue comment 62 --body "🏃‍♂️ Scrum Master Agent Update. Test Story #54. Action: ${{ env.ACTION }}. Result: $ACTION_RESULT. Timestamp: $(date). End-to-end test progressing."
        env:
          GH_TOKEN: ${{ secrets.PROJECT_TOKEN }}

      - name: ✅ Scrum Master Completion
        run: |
          echo "🏃‍♂️ Scrum Master Agent completed successfully"
          echo "📊 Story lifecycle management active"
          echo "🔄 Agent coordination operational"
          echo "🎯 Issue #62 test case: Scrum Master phase complete ✅"
